# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, VRM Consortium
# This file is distributed under the same license as the UniVRM Programming
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: UniVRM Programming \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-07 14:34+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../api/how_to_impl_extension.md:1
msgid "`v0.63.2` glTF拡張の実装"
msgstr ""

#: ../../api/how_to_impl_extension.md:3
msgid ""
"`UniVRM-0.63.2` から `UniGLTF` の構成が変わって、 `extensions` / `extras` "
"の実装方法が変わりました。"
msgstr ""

#: ../../api/how_to_impl_extension.md:5
msgid "GLTF 拡張とは"
msgstr ""

#: ../../api/how_to_impl_extension.md:7
msgid "`glTF` は各所に `extensions`, `extras` が定義してありその中身を拡張できます。"
msgstr ""

#: ../../api/how_to_impl_extension.md:9
msgid "`extensions` (またはextras)"
msgstr ""

#: ../../api/how_to_impl_extension.md:10
msgid "`asset.extensions` (またはextras)"
msgstr ""

#: ../../api/how_to_impl_extension.md:11
msgid "`meshes[*].extensions` (またはextras)"
msgstr ""

#: ../../api/how_to_impl_extension.md:12
msgid "`materials[*].extensions` (またはextras)"
msgstr ""

#: ../../api/how_to_impl_extension.md:14
msgid "など。"
msgstr ""

#: ../../api/how_to_impl_extension.md:16
msgid "`extensions` はオフィシャルに仕様を策定して `JsonSchema` として公開します。"
msgstr ""

#: ../../api/how_to_impl_extension.md:18
msgid "https://github.com/KhronosGroup/glTF/tree/master/extensions"
msgstr ""

#: ../../api/how_to_impl_extension.md:20
msgid ""
"`extensions` は、`{ベンダー名}_{拡張名}` という命名規則です。 ベンダー名は、 "
"https://github.com/KhronosGroup/glTF に申し込んで登録できます。"
msgstr ""

#: ../../api/how_to_impl_extension.md:23
msgid "`extras` は登録せずにアプリケーション独自に拡張する場合に用います。仕組みは同じです。"
msgstr ""

#: ../../api/how_to_impl_extension.md:25
msgid ""
"This enables glTF models to contain application-specific properties "
"without creating a full glTF extension"
msgstr ""

#: ../../api/how_to_impl_extension.md:27
msgid "UniGLTF の extensions"
msgstr ""

#: ../../api/how_to_impl_extension.md:29
msgid ""
"`v0.63.0` 以前は、`GLTF 型` の `extensions` フィールドに、`GLTFExtensions` "
"型を定義して、`VRM` フィールドを定義するという方法をとっていました。"
msgstr ""

#: ../../api/how_to_impl_extension.md:49
msgid "この設計だと GLTF と拡張を別ライブラリとして分離することができませんでした。"
msgstr ""

#: ../../api/how_to_impl_extension.md:51
msgid ""
"`v0.63.1` から設計を変更して、すべての `extensions/extras` に同じ型の入れ物を使うように変更しました。 "
"UniGLTF は `import/export` の具体的な内容を知らずに中間データの入れ物として扱います。"
msgstr ""

#: ../../api/how_to_impl_extension.md:69
msgid "UniGLTF の拡張の書き方"
msgstr ""

#: ../../api/how_to_impl_extension.md:71
msgid "拡張は、以下の部品要素から作れます。"
msgstr ""

#: ../../api/how_to_impl_extension.md:73
msgid ""
"名前(JsonPath)。例: `extensions.VRM`, "
"`materials[*].extensions.KHR_materials_unlit`"
msgstr ""

#: ../../api/how_to_impl_extension.md:74
msgid "拡張の型。`T型`"
msgstr ""

#: ../../api/how_to_impl_extension.md:75
msgid "デシリアライザー(import)。 `jsonバイト列 => T型`"
msgstr ""

#: ../../api/how_to_impl_extension.md:76
msgid "シリアライザーexport)。`T型 => jsonバイト列`"
msgstr ""

#: ../../api/how_to_impl_extension.md:78
msgid "JSONPATH と 型を決める"
msgstr ""

#: ../../api/how_to_impl_extension.md:91
msgid "import"
msgstr ""

#: ../../api/how_to_impl_extension.md:129
msgid "export"
msgstr ""

#: ../../api/how_to_impl_extension.md:160
msgid "実装例"
msgstr ""

#: ../../api/how_to_impl_extension.md:162
msgid "GLTF: GLTF全体"
msgstr ""

#: ../../api/how_to_impl_extension.md:163
#: ../../api/how_to_impl_extension.md:200
msgid "`C#の型からコード生成`"
msgstr ""

#: ../../api/how_to_impl_extension.md:165
msgid "`Assets\\UniGLTF\\Runtime\\UniGLTF\\Format\\GltfSerializer.g.cs`"
msgstr ""

#: ../../api/how_to_impl_extension.md:166
msgid "`Assets\\UniGLTF\\Runtime\\UniGLTF\\Format\\GltfDeserializer.g.cs`"
msgstr ""

#: ../../api/how_to_impl_extension.md:168
#: ../../api/how_to_impl_extension.md:205
#: ../../api/how_to_impl_extension.md:236
msgid "ジェネレーターの呼び出しコード"
msgstr ""

#: ../../api/how_to_impl_extension.md:170
#: ../../api/how_to_impl_extension.md:258
msgid "`Assets\\UniGLTF\\Editor\\UniGLTF\\Serialization\\SerializerGenerator.cs`"
msgstr ""

#: ../../api/how_to_impl_extension.md:171
#: ../../api/how_to_impl_extension.md:334
msgid "`Assets\\UniGLTF\\Editor\\UniGLTF\\Serialization\\DeserializerGenerator.cs`"
msgstr ""

#: ../../api/how_to_impl_extension.md:173
#: ../../api/how_to_impl_extension.md:180
#: ../../api/how_to_impl_extension.md:187
#: ../../api/how_to_impl_extension.md:194
#: ../../api/how_to_impl_extension.md:210
#: ../../api/how_to_impl_extension.md:239
msgid "生成コードの呼び出し"
msgstr ""

#: ../../api/how_to_impl_extension.md:175
msgid "GLTF: `meshes[*].extras.targetNames`"
msgstr ""

#: ../../api/how_to_impl_extension.md:176
#: ../../api/how_to_impl_extension.md:183
#: ../../api/how_to_impl_extension.md:190
msgid "`コード生成せずに手書き`"
msgstr ""

#: ../../api/how_to_impl_extension.md:178
msgid "`Assets\\UniGLTF\\Runtime\\UniGLTF\\Format\\ExtensionsAndExtras\\gltf_mesh_extras_targetNames.cs`"
msgstr ""

#: ../../api/how_to_impl_extension.md:182
msgid "GLTF: `materials[*].extensions.KHR_materials_unlit`"
msgstr ""

#: ../../api/how_to_impl_extension.md:185
msgid "`Assets\\UniGLTF\\Runtime\\UniGLTF\\Format\\ExtensionsAndExtras\\KHR_materials_unlit.cs`"
msgstr ""

#: ../../api/how_to_impl_extension.md:189
msgid "GLTF: `materials[*].extensions.KHR_texture_transform`"
msgstr ""

#: ../../api/how_to_impl_extension.md:192
msgid "`Assets\\UniGLTF\\Runtime\\UniGLTF\\Format\\ExtensionsAndExtras\\KHR_texture_transform.cs`"
msgstr ""

#: ../../api/how_to_impl_extension.md:196
msgid "https://github.com/vrm-c/UniVRM/blob/master/Assets/UniGLTF/Runtime/UniGLTF/IO/MaterialImporter.cs#L296"
msgstr ""

#: ../../api/how_to_impl_extension.md:197
msgid "https://github.com/vrm-c/UniVRM/blob/master/Assets/UniGLTF/Runtime/UniGLTF/IO/MaterialExporter.cs#L193"
msgstr ""

#: ../../api/how_to_impl_extension.md:199
msgid "VRM0: `extensions.VRM`"
msgstr ""

#: ../../api/how_to_impl_extension.md:202
msgid "`Assets\\VRM\\Runtime\\Format\\VRMSerializer.g.cs`"
msgstr ""

#: ../../api/how_to_impl_extension.md:203
msgid "`Assets\\VRM\\Runtime\\Format\\VRMDeserializer.g.cs`"
msgstr ""

#: ../../api/how_to_impl_extension.md:207
msgid "`Assets\\VRM\\Editor\\VRMSerializerGenerator.cs`"
msgstr ""

#: ../../api/how_to_impl_extension.md:208
msgid "`Assets\\VRM\\Editor\\VRMDeserializerGenerator.cs`"
msgstr ""

#: ../../api/how_to_impl_extension.md:212
msgid "https://github.com/vrm-c/UniVRM/blob/master/Assets/VRM/Runtime/IO/VRMImporterContext.cs#L41"
msgstr ""

#: ../../api/how_to_impl_extension.md:213
msgid "https://github.com/vrm-c/UniVRM/blob/master/Assets/VRM/Runtime/IO/VRMExporter.cs#L209"
msgstr ""

#: ../../api/how_to_impl_extension.md:215
msgid "VRM1: `extensions.VRMC_vrm` など"
msgstr ""

#: ../../api/how_to_impl_extension.md:216
msgid "`JsonSchemaからコード生成`"
msgstr ""

#: ../../api/how_to_impl_extension.md:218
msgid "5つの Extensions に分かれたので個別に作成。 ささる場所(JsonPath)が違うのに注意。"
msgstr ""

#: ../../api/how_to_impl_extension.md:221
msgid "`extensions.VRMC_vrm`"
msgstr ""

#: ../../api/how_to_impl_extension.md:222
msgid "`Assets\\VRM10\\Runtime\\Format\\VRM`"
msgstr ""

#: ../../api/how_to_impl_extension.md:224
msgid "`materials[*].extensions.VRMC_materials_mtoon`"
msgstr ""

#: ../../api/how_to_impl_extension.md:225
msgid "`Assets\\VRM10\\Runtime\\Format\\MaterialsMToon`"
msgstr ""

#: ../../api/how_to_impl_extension.md:227
msgid "`nodes[*].extensions.VRMC_node_collider`"
msgstr ""

#: ../../api/how_to_impl_extension.md:228
msgid "`Assets\\VRM10\\Runtime\\Format\\NodeCollider`"
msgstr ""

#: ../../api/how_to_impl_extension.md:230
msgid "`extensions.VRMC_springBone`"
msgstr ""

#: ../../api/how_to_impl_extension.md:231
msgid "`Assets\\VRM10\\Runtime\\Format\\SpringBone`"
msgstr ""

#: ../../api/how_to_impl_extension.md:233
msgid "`extensions.VRMC_vrm_constraints`"
msgstr ""

#: ../../api/how_to_impl_extension.md:234
msgid "`Assets\\VRM10\\Runtime\\Format\\Constraints`"
msgstr ""

#: ../../api/how_to_impl_extension.md:237
msgid "`Assets\\VRM10\\Editor\\GeneratorMenu.cs`"
msgstr ""

#: ../../api/how_to_impl_extension.md:241
msgid "コード生成"
msgstr ""

#: ../../api/how_to_impl_extension.md:242
msgid ""
"JSON と C# の型との シリアライズ/デシリアライズは定型コードになるので、ジェネレーターがあります。 C# "
"の型から生成するものと、JsonSchema から C# の型とともに生成するものがあります。"
msgstr ""

#: ../../api/how_to_impl_extension.md:245
msgid "C# の型から生成"
msgstr ""

#: ../../api/how_to_impl_extension.md:247
msgid "シリアライザー"
msgstr ""

#: ../../api/how_to_impl_extension.md:249
#: ../../api/how_to_impl_extension.md:325
msgid "ジェネレーターを呼び出すコードを作成します。"
msgstr ""

#: ../../api/how_to_impl_extension.md:251
#: ../../api/how_to_impl_extension.md:327
msgid "元になる型"
msgstr ""

#: ../../api/how_to_impl_extension.md:252
#: ../../api/how_to_impl_extension.md:328
msgid "出力先"
msgstr ""

#: ../../api/how_to_impl_extension.md:254
#: ../../api/how_to_impl_extension.md:330
msgid "の２つを決めます。static関数を生成するので、namespace と static class で囲ってあげます。"
msgstr ""

#: ../../api/how_to_impl_extension.md:256
#: ../../api/how_to_impl_extension.md:332
msgid "例"
msgstr ""

#: ../../api/how_to_impl_extension.md:323
msgid "デシリアライザー"
msgstr ""

#: ../../api/how_to_impl_extension.md:400
msgid "キー出力の抑制"
msgstr ""

#: ../../api/how_to_impl_extension.md:402
msgid "`index` に無効な値として `-1` を入れる場合に、JSONではキーを出力しないとしたいことがあります。"
msgstr ""

#: ../../api/how_to_impl_extension.md:404
msgid "TODO: `int?` にするべきだった"
msgstr ""

#: ../../api/how_to_impl_extension.md:411
msgid "のようにすることで、キーの出力を抑制できます。"
msgstr ""

#: ../../api/how_to_impl_extension.md:418
msgid "何も付けないと"
msgstr ""

#: ../../api/how_to_impl_extension.md:425
msgid "enum のエンコーディング"
msgstr ""

#: ../../api/how_to_impl_extension.md:427
msgid "enumの値の名前を文字列で使う、enumの値の数値を使うの2種類がありえます。 enumの場合はデフォルト値が無いので必須です。"
msgstr ""

#: ../../api/how_to_impl_extension.md:438
msgid "JsonSchemaから生成"
msgstr ""

#: ../../api/how_to_impl_extension.md:439
msgid "VRM-1.0 の実装"
msgstr ""

#: ../../api/how_to_impl_extension.md:441
msgid "TODO:"
msgstr ""

