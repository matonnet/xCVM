# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, VRM Consortium
# This file is distributed under the same license as the UniVRM Programming
# Document package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: UniVRM Programming Document \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-29 16:41+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../implementation/scripted_importer.md:1
msgid "ScriptedImporter の実装"
msgstr ""

#: ../../implementation/scripted_importer.md:3
msgid ""
"`v0.68.0` 以降 の `glb/gltf editor importer` と `VRM-1.0 editor importer` "
"の実装で使用している "
"[ScriptedImporter](https://docs.unity3d.com/ja/2019.4/ScriptReference/Experimental.AssetImporters.ScriptedImporter.html)"
" に関して。"
msgstr ""

#: ../../implementation/scripted_importer.md:5
msgid "`VRM-1.0` の実装と拡張子がぶつかってしまうので `VRM-0.x` への `ScriptedImporter` 実装はしません"
msgstr ""

#: ../../implementation/scripted_importer.md:7
msgid "ScriptedImporter 採用の利点"
msgstr ""

#: ../../implementation/scripted_importer.md:9
msgid "Texture の Asset化 が楽"
msgstr ""

#: ../../implementation/scripted_importer.md:11
msgid ""
"`AssetPostprocessor` だと普通の方法では実装できない Texture のバイト列を出力して Asset 化して、 "
"これを参照する Material をアセット化するということが、 `ScriptedImporter.GetExternalObjectMap` "
"により無理をせずに実装できます。"
msgstr ""

#: ../../implementation/scripted_importer.md:15
msgid "UniVRM では抜け道として `EditorApplication.delayCall` を使用しています。"
msgstr ""

#: ../../implementation/scripted_importer.md:17
msgid "Import 設定を作れる"
msgstr ""

#: ../../implementation/scripted_importer.md:19
msgid ""
"`ScriptedImporter` を継承したクラスの `public member` や `[SerializeField]` "
"に情報を保存できます。"
msgstr ""

#: ../../implementation/scripted_importer.md:32
msgid "ForceText 時に import が低速化するのを回避できる"
msgstr ""

#: ../../implementation/scripted_importer.md:34
msgid ""
"`ScriptedImporter` の SubAsset にすることで、 `mesh` などがテキスト(yaml)で Asset "
"化されることを回避できます。 巨大なアセットで差が出ます。"
msgstr ""

#: ../../implementation/scripted_importer.md:37
msgid "ScriptedImporter 実装"
msgstr ""

#: ../../implementation/scripted_importer.md:39
msgid "TODO: ExternalObjectMap の扱い"
msgstr ""

