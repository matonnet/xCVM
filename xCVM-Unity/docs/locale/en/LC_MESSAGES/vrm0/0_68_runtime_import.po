# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, VRM Consortium
# This file is distributed under the same license as the UniVRM Programming
# Document package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: UniVRM Programming Document \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-15 16:47+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../vrm0/0_68_runtime_import.md:1
msgid "RuntimeImport(0.68) DisposeOnGameObjectDestroyed(obsolete)"
msgstr ""

#: ../../vrm0/0_68_runtime_import.md:3
msgid "過去バージョンからの仕様変更"
msgstr "API Changes"

#: ../../vrm0/0_68_runtime_import.md:5
msgid "`ImporterContext` の仕様を変更しました。"
msgstr "ImporterContext has been reworked."

#: ../../vrm0/0_68_runtime_import.md:7
msgid "ロード処理が Parse と Load の 2 ステップに分かれました。"
msgstr "Loading processing has been divided into two steps: `Parse` and `Load`."

#: ../../vrm0/0_68_runtime_import.md:8
msgid "Parse 処理をメインスレッド以外で処理することができます。"
msgstr "`Parse` processing can be processed by other than the main thread."

#: ../../vrm0/0_68_runtime_import.md:9
msgid "非同期ロード関数 `ImporterContext.LoadAsync` の実装を `Task` に変更しました。"
msgstr ""
"The implementation of asynchronous loading function "
"`ImporterContext.LoadAsync` has changed to `Task`."

#: ../../vrm0/0_68_runtime_import.md:10
msgid "これまで明示的に破棄できなかった `UnityEngine.Object` リソースを破棄できるようになりました。"
msgstr ""
"The method of explicitly destroying `UnityEngine.Object` resources is now"
" available."

#: ../../vrm0/0_68_runtime_import.md:11
msgid "リソースのリークを防ぐことができます。"
msgstr " As such, resource leaks can be prevented."

#: ../../vrm0/0_68_runtime_import.md:12
msgid "`ImporterContext.Dispose` を呼び出すべきタイミングを「ロード処理終了時」に変更しました。"
msgstr ""
"The timing of calling `ImporterContext.Dispose` has been changed to when "
"the loading process ends"

#: ../../vrm0/0_68_runtime_import.md:13
msgid "呼び出して破棄する前に、後述の `ImporterContext.DisposeOnGameObjectDestroyed` を呼び出してください。"
msgstr ""
"Call `ImporterContext.DisposeOnGameObjectDestroyed` function (described "
"below) before `ImporterContext.Dispose` function is called."

#: ../../vrm0/0_68_runtime_import.md:14
msgid "以前の仕様は「生成したモデルの破棄時」に呼び出すべき関数でした。"
msgstr ""
"In the previous versions, `ImporterContext.Dispose` is called when the "
"generated VRM model is destroyed."

#: ../../vrm0/0_68_runtime_import.md:15
msgid "`ImporterContext.DisposeOnGameObjectDestroyed` 関数を追加しました。"
msgstr "Added `ImporterContext.DisposeOnGameObjectDestroyed` function"

#: ../../vrm0/0_68_runtime_import.md:16
msgid ""
"VRM モデルが必要とするリソース (Texture, Material, Mesh, etc) を破棄する責務を GameObject "
"に移譲できます。"
msgstr ""
"The duty of destroying VRM resources (Texture, Material, Mesh, etc) has "
"been transferred to GameObject."

#: ../../vrm0/0_68_runtime_import.md:17
msgid "VRM の GameObject の破棄タイミングでリソース (Texture, Material, Mesh, etc) を破棄します。"
msgstr ""
"The resources (Texture, Material, Mesh, etc) will be destroyed when VRM's"
" GameObject is destroyed."

#: ../../vrm0/0_68_runtime_import.md:20
msgid "サンプルコード（同期的ロード）"
msgstr "Sample Codes (Synchronous Loading)"

#: ../../vrm0/0_68_runtime_import.md:88
msgid "サンプルコード（非同期ロード）"
msgstr "Sample Codes (Asynchronous Loading)"

#~ msgid "RuntimeImport(0.68)"
#~ msgstr ""

