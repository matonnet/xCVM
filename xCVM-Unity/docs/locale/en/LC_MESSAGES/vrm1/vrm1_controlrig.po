# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, VRM Consortium
# This file is distributed under the same license as the UniVRM Programming
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: UniVRM Programming \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-07 15:03+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../vrm1/vrm1_controlrig.md:1
msgid "ControlRig 正規化されていないモデルを操作する"
msgstr "ControlRig: Working with Unnormalized Models"

#: ../../vrm1/vrm1_controlrig.md:3
msgid "VRM-1.0 は正規化が仕様から除かれました。"
msgstr "VRM-1.0 removed normalization from the specification."

#: ../../vrm1/vrm1_controlrig.md:5
msgid "正規化"
msgstr "Normalization"

#: ../../vrm1/vrm1_controlrig.md:1
msgid "正規化とは、ヒエラルキーからの 回転、スケールの除去。 その状態での Binding 行列再生成。 です。"
msgstr "Normalization is removing the rotation and scale from the hierarchy."
"Regenerate the combined matrix in that state."

#: ../../vrm1/vrm1_controlrig.md:5
msgid "すべてのノードの回転が 0 のときが初期姿勢(T-Pose)であるという仕様で、 プログラムから統一的にモデルを操作することが可能でした。"
msgstr "With the specification that the initial pose (T-Pose) is when the rotation of all nodes is 0, we were able to uniformly manipulate the model from the program."

#: ../../vrm1/vrm1_controlrig.md:16
msgid "`v0.103` 正規化されていないモデルも含めて統一的にポーズを付けるインターフェスとして、 `ControlRig` が新規に導入されました。"
msgstr "`v0.103` `ControlRig` is newly introduced as an interface for uniformly posing even non-normalized models."

#: ../../vrm1/vrm1_controlrig.md:18
msgid ""
"Vrm10RuntimeControlRig.GetBoneTransform が導入されました。`v0.104` で "
"Animator.getBoneTransform が 使えるようになったので特に使う必要が無くなりました。"
msgstr "Vrm10RuntimeControlRig.GetBoneTransform was introduced. "
"in `v0.104` Animator.getBoneTransform is now available so you no longer need to use it."

#: ../../vrm1/vrm1_controlrig.md:21
msgid ""
"`v0.104` `UnityEngine.Animator.getBoneTransform` が ControlRig "
"のボーンを返すようになりました。"
msgstr "`v0.104` `UnityEngine.Animator.getBoneTransform` is ControlRig
now returns the bones of the ."

#: ../../vrm1/vrm1_controlrig.md:23
msgid "HumanoidAvatar の材料に ControlRig のボーンを使う"
msgstr "Using ControlRig bone as material for HumanoidAvatar"

#: ../../vrm1/vrm1_controlrig.md:1
msgid ""
"ControlRigGenerationOption.Generate の時は、AvatarBuilder.BuildHumanAvatar "
"の引き数にオリジナルのヒエラルキーでは無く、 ControlRig のボーンを渡します。"
msgstr "For ControlRigGenerationOption.Generate, AvatarBuilder.BuildHumanAvatar "
"Pass the ControlRig's bones to the arguments instead of the original hierarchies."

#: ../../vrm1/vrm1_controlrig.md:29
msgid "ControlRig は ランタイムロード時に生成されます"
msgstr "ControlRig is generated at runtime load"

#: ../../vrm1/vrm1_controlrig.md:31
msgid "ランタイムロード専用"
msgstr "Runtime load only"

#: ../../vrm1/vrm1_controlrig.md:1
msgid ""
"`v0.103` 現在この機能は Editor で Asset 生成されたモデルでは動作しません。 "
"VRMモデルをセットアップするときに邪魔になってしまうので、Editor では生成しないようにしています。"
msgstr "As of `v0.103`, this feature does not work with in-editor asset generation models."
"I don't want to generate it in the Editor as it gets in the way when setting up the VRM model."

#: ../../vrm1/vrm1_controlrig.md:38
msgid ""
"デフォルトで ControlRig を生成 `ControlRigGenerationOption.Generate` します。 "
"`ControlRigGenerationOption.None` は ControlRig を生成しません。"
msgstr "`ControlRigGenerationOption.Generate` to generate a ControlRig by default."

#: ../../vrm1/vrm1_controlrig.md:53
msgid ""
"`ControlRigGenerationOption.Generate` でロードしたモデルは、 "
"`Animator.getBoneTransform` が ControlRig の該当ボーンを返します。 "
"オリジナルのボーンを取得する方法は後述します。"
msgstr "Model loaded with `ControlRigGenerationOption.Generate`"
"`Animator.getBoneTransform` returns the corresponding bone of the ControlRig."
"How to get the original bones is described later."

#: ../../vrm1/vrm1_controlrig.md:57
msgid "ControlRig でないオリジナルのボーンを取得する方法"
msgstr "How to get bones other than the original ControlRig"

#: ../../vrm1/vrm1_controlrig.md:59
msgid "`Vrm10Instance.Humanoid.GetBoneTransform` を使ってください。"
msgstr "Use Vrm10Instance.Humanoid.GetBoneTransform."

#: ../../vrm1/vrm1_controlrig.md:61
msgid "ControlRig によるポーズ適用例"
msgstr "Example of applying pose with ControlRig"

#: ../../vrm1/vrm1_controlrig.md:63
msgid ""
"正規化済みの bvh ヒエラルキーの `Animator src` のポーズを、 未正規化かもしれない `vrm-1.0` "
"モデルにコピーする例です。"
msgstr "`Animator src` pose in normalized bvh hierarchy, possibly non-normalized `vrm-1.0`
Copy to model example."

#: ../../vrm1/vrm1_controlrig.md:66
msgid "各ボーンの localRotation を代入するだけで動きます。"
msgstr "Just replace the localRotation for each bone you move."

#: ../../vrm1/vrm1_controlrig.md:109
msgid "詳細"
msgstr "detail"

#: ../../vrm1/vrm1_controlrig.md:1
msgid "ControlRig"
msgstr ""

#: ../../vrm1/vrm1_controlrig.md:115
msgid ""
"毎フレーム `Vrm10Instance` が `Vrm10RuntimeControlRig` "
"からVRM-1.0のヒエラルキーにポーズをコピーします。 コピーするときに、各関節の回転を初期姿勢を加味したものに加工しています。"
msgstr "Every frame `Vrm10Instance` is `Vrm10RuntimeControlRig` Copy the pose into the VRM-1.0 hierarchy. "
"When copying, the rotation of each joint is processed to reflect the initial pose. "

#: ../../vrm1/vrm1_controlrig.md:118
msgid ""
"`GlobalInit.Inverse * localPose * GlobalInit` という式がロジックです。 "
"これにより、正規化済みのポーズ(localPose) を非正規化ポーズに変換できます。"
msgstr "The logic is the expression `GlobalInit.Inverse * localPose * GlobalInit`."
"This allows you to convert a normalized pose (localPose) to a non-normalized pose."

#: ../../vrm1/vrm1_controlrig.md:121
msgid "`Vrm10ControlBone.cs`"
msgstr ""

